# =========================================================
# 패턴 필터링 예시 파일 (patterns.txt)
# 각 줄은 하나의 패턴을 정의합니다.
# 형식: type:value
# 현재는 'string' 타입만 지원합니다.
#
# 'string' 타입: 주어진 문자열을 페이로드에서 검색합니다.
#               대소문자를 구분할지 여부는 Boyer-Moore 구현에 따라 달라집니다.
#               (기본 구현은 대소문자를 구분합니다.)
#
# '#'으로 시작하는 줄은 주석으로 처리됩니다.
# =========================================================

# --- 일반적인 웹 트래픽 관련 필터링 예시 ---

# 특정 웹 사이트 접속 차단 (Host 헤더 필터링)
string:malicious-site.com
string:bad-domain.net
string:phishing.xyz

# 특정 HTTP User-Agent 차단 (봇, 스캐너 등)
string:User-Agent: Nikto
string:User-Agent: dirbuster

# 특정 HTTP 요청 메서드/경로 필터링 (비정상적인 요청)
string:GET /admin/backup.zip
string:POST /upload_shell.php
string:PUT /sensitive_data/

# HTTP 응답 내 특정 키워드/시그니처 필터링 (악성 응답, 정보 유출)
string:alert("XSS")
string:document.cookie
string:<script src="http://evil.com/payload.js">

# --- 기타 프로토콜 필터링 예시 (텍스트 기반 가정) ---

# DNS 쿼리 내 악성 도메인 필터링
string:evil-dns-query.example

# 이메일 내용 필터링 (SMTP, POP3 등)
# 실제 이메일 본문은 Base64 인코딩될 수 있으므로, 해당 디코딩 과정이 선행되어야 할 수 있음.
string:비밀번호 변경 요청
string:당신의 계정이 해킹되었습니다.

# FTP 명령 필터링
string:USER anonymous
string:PASS 12345
string:RETR /etc/passwd

# --- 바이너리 시그니처 필터링 예시 (Hex 값을 ASCII 문자열로 표현) ---
# 실제로는 바이너리 시그니처는 헥사 값으로 직접 패턴을 정의하는 경우가 많음.
# Boyer-Moore 구현이 이진 패턴을 지원한다면, 직접 바이트 값으로 정의할 수 있습니다.
# 예를 들어, string:\x4D\x5A\x90\x00 와 같이 이스케이프 시퀀스를 사용할 수 있도록 파서 구현 필요
# 현재는 단순히 문자열로 간주되므로, 이진 시그니처는 ASCII로 표현 가능한 형태로만 가능.
# 예: "MZ" (PE 파일의 시작 시그니처)
# string:MZ